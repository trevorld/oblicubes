% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom_oblicubes.R
\name{geom_oblicubes}
\alias{geom_oblicubes}
\title{Draw 2D/3D cubes with ggplot2}
\usage{
geom_oblicubes(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  angle = 45,
  scale = 0.5,
  light = darken_face,
  show.legend = NA,
  inherit.aes = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}}. If specified and
\code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply \code{mapping} if there is no plot
mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, either as a \code{ggproto} \code{Geom} subclass or as a string naming the
stat stripped of the \code{stat_} prefix (e.g. \code{"count"} rather than
\code{"stat_count"})}

\item{position}{Position adjustment, either as a string naming the adjustment
(e.g. \code{"jitter"} to use \code{position_jitter}), or the result of a call to a
position adjustment function. Use the latter if you need to change the
settings of the adjustment.}

\item{...}{Aesthetics, used to set an aesthetic to a fixed value.}

\item{angle}{Oblique projection angle.}

\item{scale}{Oblique projection foreshortening factor.
0.5 corresponds to the \dQuote{cabinet projection}.
1.0 corresponds to the \dQuote{cavalier projection}.
0.0 corresponds to a \dQuote{primary view orthographic projection}.}

\item{light}{If \code{FALSE} don't perform a "light" effect.
Otherwise a function that takes two arguments:
the first \code{face} of the cube/cuboid face
(one of "top", "west", "east", "south", "north").
the second \code{col} of the fill color.
By default we use \code{\link[=darken_face]{darken_face()}}.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}
}
\description{
\code{geom_oblicubes()} creates a \code{ggplot2} geom that draws cubes.
}
\details{
\code{geom_oblicubes()} requires a fixed scale coordinate system with an aspect
ratio of 1 as provided by \code{ggplot2::coord_fixed()}.
}
\section{Aesthetics}{

\code{geom_oblicubes()} understands the following aesthetics (required aesthetics are in bold).
See \code{\link[=oblicubesGrob]{oblicubesGrob()}} for more details.
\itemize{
\item \strong{\code{x}}
\item \strong{\code{y}}
\item \code{z}
\item \code{fill}
\item \code{colour}
\item \code{linetype}
\item \code{linewidth}
}
}

\examples{
if (require("ggplot2")) {
  mat <- datasets::volcano
  mat <- 0.3 * (mat - min(mat)) + 1.0

  # We require an equal aspect ratio
  df <- xyz_heightmap(mat)
  g <- ggplot(df, aes(x, y, z = z, fill = z)) +
         geom_oblicubes(light = FALSE) +
         coord_fixed() +
         scale_fill_viridis_c()
  plot(g)

  df <- xyz_heightmap(mat, col = grDevices::terrain.colors)
  g <- ggplot(df, aes(x, y, z = z, fill = fill)) +
         geom_oblicubes() +
         coord_fixed() +
         scale_fill_identity()
  plot(g)
}
}
\seealso{
\code{geom_oblicubes()} is a wrapper around \code{\link[=oblicubesGrob]{oblicubesGrob()}}.
}
